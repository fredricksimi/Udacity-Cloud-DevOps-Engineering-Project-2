Parameters:
  EnvironmentName:
      Description: An environment that will be prefixed to resource names
      Type: String

Resources:
  myLBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http to our load balancer
      VpcId: 
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      SecurityGroupEgress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp

  myWebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId: 
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      SecurityGroupEgress:  
        - CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 65535
          IpProtocol: tcp

  myNewS3ReadOnlyEC2:
    Type: AWS::IAM::Role
    Properties:
      RoleName: myNewS3ReadOnlyEC2
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: '/'
      Policies:
        - PolicyName: "S3ReadOnlyAccess"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:Get*"
                Resource: "*"

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref myNewS3ReadOnlyEC2

  myWebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo apt update -y
          sudo apt install -y apache2
          sudo systemctl start apache2.service
          sudo apt-get install zip -y
          sudo rm /var/www/html/index.html
          sudo wget -P /var/www/html https://myudacityproject2.s3.us-west-1.amazonaws.com/index.html
      ImageId: IMAGE_ID_HERE
      SecurityGroups:
       - Ref: myWebServerSecGroup
      InstanceType: t3.medium
      BlockDeviceMappings:
       - DeviceName: "/dev/sdk" 
         Ebs:
           VolumeSize: '10'

  myWebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: myWebAppLaunchConfig
      MinSize: '4'
      MaxSize: '6'
      TargetGroupARNs:
        - Ref: myWebAppTargetGroup

  myWebAppLB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: myLBSecGroup

  myListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: myWebAppTargetGroup
      LoadBalancerArn:
        Ref: myWebAppLB
      Port: "80"
      Protocol: HTTP

  myALBListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "myWebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "myListener"
      Priority: 1

  myWebAppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:

  mySiteAddress:
    Description: The loadbalancer http endpoint
    Value: !Join [ '', [ 'http://', !GetAtt myWebAppLB.DNSName ] ]
    Export:
      Name: !Sub ${EnvironmentName}-DNSName
